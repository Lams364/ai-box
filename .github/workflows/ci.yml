name: CI-CD AI-Box
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  integration-test:
    name: Run integration tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Create .env file
      run: |
          echo "HF_TOKEN='${{ secrets.DEFAULT_HF_TOKEN }}'" >> .env
          echo "HF_MODEL_ID='${{ secrets.TEST_HF_MODEL_ID }}'" >> .env

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Run Integration Tests
      run: |
        pytest

  lint-and-format:
    name: Formatting and Linting with Black and Pylint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Format with Black
      run: |
        black --check .

    - name: Set up Python Path
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Lint with Pylint
      run: |
        pylint --disable=E0213 --errors-only **/*.py

  build-push-to-dockerhub:
    name: Build and Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/main'
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_REPO }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable=true # {{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create .env file
        run: |
          echo "HF_TOKEN='${{ secrets.DEFAULT_HF_TOKEN }}'" >> .env
          echo "HF_MODEL_ID='${{ secrets.DEFAULT_HF_MODEL_ID }}'" >> .env
          echo "MODEL_DIR='${{ secrets.MODEL_DIR }}'" >> .env

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}